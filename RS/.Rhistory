frecuencias <- table(vector)
moda <- as.numeric(names(frecuencias[frecuencias == max(frecuencias)]))
return(moda)
}
moda_vector <- lapply(vectores, calc_moda)
message("La moda de este vector es:", moda_vector)
vectores <- list(
v1 = c(7, 10, 3, 3, 4, 4, 5),
v2 = c(2, 2,81, 7, 81, 81, 5, 5,81),
v3 = c(55, 2, 2, 3, 3, 55, 55)
)
calc_moda <- function(vector) {
frecuencias <- table(vector)
moda <- as.numeric(names(frecuencias[frecuencias == max(frecuencias)]))
return(moda)
}
moda_vector <- lapply(vectores, calc_moda)
moda_vector
setwd("~/Desktop/UFM/Sexto Semestre/Data Wrangling/Data-Wrangling/RS/Clases")
setwd("~/Desktop/UFM/Sexto Semestre/Data Wrangling/Data-Wrangling/RS/Clases")
setwd("~/Desktop/UFM/Sexto Semestre/Data Wrangling/Data-Wrangling/RS")
setwd("~/Desktop/UFM/Sexto Semestre/Data Wrangling/Data-Wrangling/RS/Clases")
library(tidyverse)
library(dyplr)
library(dplyr)
library(tidyverse)
install.packages('highcharter')
library(highcharter)
library(readr)
df <- read.delim('2010-2019-top.csv',";", escape_double = FALSE, trim_ws = TRUE)
df <- read.delim("2010-2019-top.csv",";",
escape_double = FALSE,
trim_ws = TRUE)
df <- read_delim("2010-2019-top.csv",";",
escape_double = FALSE,
trim_ws = TRUE)
View(df)
str(df)
glimpse(df)
name?
?name
names(df)[names(df) == "top genre"] <- top_genre
nuevo_name = 'top_genre'
names(df)[names(df) == "top genre"] <- nuevo_name
str(df)
names(df)[4] <- 'top_G'
str(df)
names(df)[4] <- 'top_genre'
str(df)
name(df)
names(df)
df <- read_delim("2010-2019-top.csv",";",
escape_double = FALSE,
trim_ws = TRUE)
rename(df, top_genre = `top genre`)
names(df)[which == "top genre"]
which(names(df) == "top genre")
names(df)[which(names(df) == "top genre")]
df <- read_delim("2010-2019-top.csv",";",
escape_double = FALSE,
trim_ws = TRUE)
rename_with(df, ~(gsub(" ", "_", .x)))
View(df)
View(df)
#filtrabamos variables o columnas
head(df)
select(df,artist, year)
#filtrabamos variables o columnas
head(select(df,artist, year))
df %>% select(artist,year) %>% head()
df %>%
select("artist","year") %>%
head()
df %>%
select("artist","year") %>%
head()
df %>%
select(1,2) %>%
head()
# quiero todas las columnas menos 1
df %>%
select(-X1)
df
head(df[,-X1])
head(df[,"-X1"])
head(df[,-"X1"])
head(df[,c("X1")])
head(df[,-c("X1")])
head(df[,c-("X1")])
#text a factores
df <- mutate_if(df, is.character, as.factor)
glimpse(df)
df %>%
filter(year == 2010) %>%
select(artist, title, year)
#agregaciones
group_by(df, year == 2010)
df %>%
group_by(year)
df %>%
group_by(year) %>%
count(artist)
df %>%
group_by(year) %>%
summarize(num_artists = n_distinct(artist))
df %>%
group_by(year) %>%
summarize( n_distinct(artist))
df %>%
group_by(year) %>%
summarize(count(artist))
n_distinct
df %>%
group_by(year) %>%
summarize(n_distinct(artist))
df %>%
group_by(year,artist) %>%
summarize(n_distinct(artist))
df %>%
select(year,artist)%>%
group_by(year) %>%
summarize()
df %>%
select(year,artist)%>%
group_by(year) %>%
summarise()
df %>%
select(year,artist)%>%
group_by(year) %>%
summarise(n=n())
sum(n_distinct(artist))
sum(n_distinct(df$artist))
df %>%
select(year,artist)%>%
group_by(year) %>%
summarise(n=n_distinct(artist))
df %>%
select(year,title)%>%
group_by(year) %>%
summarise(n=n_distinct(title))
df %>%
select(title)%>%
summarise(n=n_distinct(title))
df %>%
group_by(title) %>%
summarise(count = n()) %>%
filter(count > 1)
df %>%
group_by(title) %>%
summarise(count = n()) %>%
filter(count > 1)
df %>%
group_by(title) %>%
summarise(count = n()) %>%
filter(count > 1)
library(readr)
library(dplyr)
library(tidyverse)
library(highcharter)
df <- read_delim("2010-2019-top.csv",";",
escape_double = FALSE,
trim_ws = TRUE)
str(df)
glimpse(df)
names(df)[names(df) == "top genre"]
names(df)[which(names(df) == "top genre")]
rename_with(df, ~(gsub(" ", "_", .x)))
df <- read_delim("2010-2019-top.csv",";",
escape_double = FALSE,
trim_ws = TRUE)
setwd("~/Desktop/UFM/Sexto Semestre/Data Wrangling/Data-Wrangling/RS/Clases")
library(readr)
library(dplyr)
library(tidyverse)
library(highcharter)
df <- read_delim("2010-2019-top.csv",";",
escape_double = FALSE,
trim_ws = TRUE)
rename_with(df, ~(gsub(" ", "_", .x)))
df %>%
group_by(title) %>%
summarise(count = n()) %>%
filter(count > 1)
603-584
#cuantas canciones se repiten por aÃ±o
df %>%
select(year,title)%>%
group_by(title) %>%
summarise(count = n()) %>%
filter(count > 1)
df %>%
group_by(artist) %>%
summarise(cantidad_anios = n_distinct(anio),
cantidad_canciones = n()) %>%
filter(cantidad_anios > 1, cantidad_canciones > 1)
df %>%
group_by(artist) %>%
summarise(cantidad_anios = n_distinct(year),
cantidad_canciones = n()) %>%
filter(cantidad_anios > 1, cantidad_canciones > 1)
df %>%
select(year, title, artist) %>%
group_by(title) %>%
summarise(count = n(), artist = first(artist)) %>%
filter(count > 1)
df %>%
select(year, title, artist) %>%
group_by(title) %>%
summarise(count = n(), artist = first(artist)) %>%
filter(count > 1) %>%
distinct(artist)
df %>%
select(year, title, artist) %>%
group_by(title) %>%
summarise(count = n(), artist = n_distinct(artist)) %>%
filter(count > 1) %>%
df %>%
select(year, title, artist) %>%
group_by(title) %>%
summarise(count = n(), artist = n_distinct(artist)) %>%
filter(count > 1)
df %>%
select(year, title, artist) %>%
group_by(title) %>%
summarise(count = n(), artist = n_distinct(artist)) %>%
filter(count > 1)
df %>%
select(year, title, artist) %>%
group_by(title) %>%
summarise(count = n(), artist = first(artist)) %>%
filter(count > 1) %>%
distinct(artist)
df %>%
select(year, title, artist) %>%
group_by(title) %>%
summarise(count = n(), artist = first(artist)) %>%
distinct(artist) %>%
filter(count > 1)
df %>%
select(year, title, artist) %>%
group_by(title) %>%
summarise(count = n(), artist = first(artist)) %>%
filter(count > 1) %>%
distinct(artist)
df %>%
select(year, title, artist) %>%
group_by(artist) %>%
summarise(cantidad_canciones_repetidas = sum(duplicated(title)))
df %>%
select(year, title, artist) %>%
group_by(title) %>%
summarise(count = n(), artist = first(artist)) %>%
filter(count > 1) %>%
distinct(artist)
df %>%
select(year, title, artist) %>%
group_by(title) %>%
summarise(count = n(), artist = first(artist)) %>%
filter(count > 1 & distinct(artist))
df %>%
select(year, title, artist) %>%
group_by(title) %>%
summarise(count = n(), artist = first(artist)) %>%
filter(count > 1) %>%
distinct(artist) %>%
group_by(artist) %>%
summarise(cantidad_canciones_repetidas = n())
df %>%
select(year, title, artist) %>%
group_by(title) %>%
summarise(count = n(), artist = first(artist)) %>%
filter(count > 1) %>%
distinct(artist)
source("~/Desktop/UFM/Sexto Semestre/Data Wrangling/Data-Wrangling/RS/Clases/dplyr.R", echo=TRUE)
df %>%
group_by(artist, title) %>%
count() %>%
filter(n>1) %>%
filter(duplicated(artist))
df %>%
group_by(artist, title) %>%
count() %>%
filter(n>1) %>%
group_by(artist)
source("~/Desktop/UFM/Sexto Semestre/Data Wrangling/Data-Wrangling/RS/Clases/dplyr.R", echo=TRUE)
source("~/Desktop/UFM/Sexto Semestre/Data Wrangling/Data-Wrangling/RS/Clases/dplyr.R", echo=TRUE)
df %>%
group_by(artist, title) %>%
count() %>%
filter(n>1) %>%
group_by(artist) %>%
summarise(artistas = n()) %>%
filter(artistas >1)
setwd("~/Desktop/UFM/Sexto Semestre/Data Wrangling/Data-Wrangling/RS/Labs/Lab4")
library(readxl)
library(dplyr)
data <- read_xlsx("datos_combinados.xlsx")
head(data)
coffee <- read_xlsx("datos_combinados.xlsx")
head(coffee)
summary(coffee)
str(coffee)
coffee2 <- coffee %>%
mutate(Month = substr(Fecha, 1, 2),  # Extraer los primeros 2 caracteres para el mes
Year = substr(Fecha, 4, 7))
View(coffee2)
str(coffee2)
View(coffee2)
coffee2 <- coffee %>%
mutate(MONTH = substr(Fecha, 1, 2),  # Extraer los primeros 2 caracteres para el mes
YEAR = substr(Fecha, 4, 7))
coffee <- read_xlsx("datos_combinados.xlsx")
coffee2 <- coffee %>%
mutate(MONTH = substr(Fecha, 1, 2),  # Extraer los primeros 2 caracteres para el mes
YEAR = substr(Fecha, 4, 7))
head(coffee)
str(coffee2)
coffee2 <- coffee %>%
mutate(MONTH = substr(Fecha, 1, 2),  # Extraer los primeros 2 caracteres para el mes
YEAR = substr(Fecha, 4, 7)) %>%
select(-Fecha)
View(coffee2)
str(coffee2)
coffee2$MONTH <- as.factor(coffee2$MONTH)
str(coffee2)
library(ggplot2)
ggplot(coffee2, aes(x = Q)) +
geom_histogram(binwidth = 100, fill = "blue", color = "black") +
labs(title = "Histograma de Q en Rangos de 100",
x = "Valor de Q",
y = "Frecuencia")
ggplot(coffee2, aes(x = Q)) +
geom_histogram(binwidth = 100, fill = "blue", color = "black") +
geom_text(stat = "count", aes(label = ..count..), vjust = -0.5, color = "black") +
labs(title = "Histograma de Q en Rangos de 100",
x = "Valor de Q",
y = "Frecuencia")
ggplot(coffee2, aes(x = Q)) +
geom_histogram(binwidth = 100, fill = "blue", color = "black") +
labs(title = "Histograma de Q en Rangos de 100",
x = "Valor de Q",
y = "Frecuencia")
ggplot(coffee2, aes(x = Q)) +
geom_bar(binwidth = 100, fill = "blue", color = "black", stat = "count") +
labs(title = "Histograma de Q en Rangos de 100",
x = "Valor de Q",
y = "Frecuencia")
ggplot(coffee2, aes(x = Q, y = n)) +
geom_bar(binwidth = 100,stat = "identity", fill = "pink", col = "red") +
labs(x = "Valor de Q", y = "Frecuencia", title = "Q") +
geom_text(aes(label = n), vjust = -0.7)
ggplot(coffee2, aes(x = Q)) +
geom_histogram(binwidth = 100, fill = "pink", color = "red", stat = "count") +
geom_text(stat = "count", aes(label = ..count..), vjust = -0.7) +
labs(title = "Histograma de Q en Rangos de 100",
x = "Valor de Q",
y = "Frecuencia")
ggplot(coffee2, aes(x = Q)) +
geom_histogram(binwidth = 100, fill = "blue", color = "black") +
labs(title = "Histograma de Q en Rangos de 100",
x = "Valor de Q",
y = "Frecuencia")
ggplot(coffee2, aes(x = Q)) +
geom_histogram(binwidth = 100, fill = "blue", color = "black") +
geom_text(stat = "count", aes(label = ..count..), vjust = -0.5, color = "black") +
labs(title = "Histograma de Q en Rangos de 100",
x = "Valor de Q",
y = "Frecuencia")
ggplot(coffee2, aes(x = Q)) +
geom_histogram(binwidth = 100, fill = "pink", color = "black") +
geom_text(stat = "bin", aes(label = ..count..), vjust = -0.5, color = "black") +
labs(title = "Histograma de Q en Rangos de 100",
x = "Valor de Q",
y = "Frecuencia")
ggplot(coffee2, aes(x = Q)) +
geom_histogram(binwidth = 50, fill = "blue", color = "black") +
geom_text(stat = "bin", aes(label = ..count..), vjust = -0.5, color = "black") +
labs(title = "Histograma de Q en Rangos de 50",
x = "Valor de Q",
y = "Frecuencia")
ggplot(coffee2, aes(x = Q)) +
geom_histogram(binwidth = 50, fill = "blue", color = "black", bins = 50) +
geom_text(stat = "bin", aes(label = ..count..), vjust = -0.5, color = "black") +
labs(title = "Histograma de Q en Rangos de 50",
x = "Valor de Q",
y = "Frecuencia")
ggplot(coffee2, aes(x = Q)) +
geom_histogram(binwidth = 50, fill = "blue", color = "black", bins = 25) +
geom_text(stat = "bin", aes(label = ..count..), vjust = -0.5, color = "black") +
labs(title = "Histograma de Q en Rangos de 50",
x = "Valor de Q",
y = "Frecuencia")
ggplot(coffee2, aes(x = Q)) +
geom_histogram(binwidth = 30, fill = "blue", color = "black", bins = 30) +
geom_text(stat = "bin", aes(label = ..count..), vjust = -0.5, color = "black") +
labs(title = "Histograma de Q en Rangos de 50",
x = "Valor de Q",
y = "Frecuencia")
ggplot(coffee2, aes(x = Q)) +
geom_histogram(binwidth = 50, fill = "blue", color = "black", bins = 30) +
geom_text(stat = "bin", aes(label = ..count..), vjust = -0.5, color = "black") +
labs(title = "Histograma de Q en Rangos de 50",
x = "Valor de Q",
y = "Frecuencia")
ggplot(coffee2, aes(x = Q)) +
geom_histogram(binwidth = 50, fill = "blue", color = "black") +
geom_text(stat = "summary", fun.y = "sum", aes(label = after_stat(y)), vjust = -0.5, color = "black") +
labs(title = "Histograma de Q en Rangos de 50",
x = "Valor de Q",
y = "Frecuencia")
Qs <- coffee2 %>%
group_by(Q = cut(Q, breaks = seq(0, 700, by = 50))) %>%
summarise(n = n())
Qs
Qs <- coffee2 %>%
group_by(Q = cut(Q, breaks = seq(0, 500, by = 50))) %>%
summarise(n = n())
Qs
ggplot(Qs, aes(x = Q)) +
geom_histogram(binwidth = 100, fill = "blue", color = "black") +
labs(title = "Histograma de Q en Rangos de 100",
x = "Valor de Q",
y = "Frecuencia")
ggplot(Qs, aes(x = Q, y = n)) +
geom_bar(stat = "identity", fill = "blue", color = "black") +
labs(title = "Histograma de Q en Rangos de 100",
x = "Valor de Q",
y = "Frecuencia")
ggplot(Qs, aes(x = Q, y = n)) +
geom_bar(stat = "identity", fill = "blue", color = "black") +
labs(title = "Q en Rangos de 100",
x = "Valor de Q",
y = "Frecuencia")
ggplot(Qs, aes(x = Q, y = n)) +
geom_bar(stat = "identity", fill = "blue", color = "black") +
labs(title = "Q en Rangos de 100",
x = "Valor de Q",
y = "Frecuencia")+
geom_text(aes(label = n), vjust = -0.7)
ggplot(Qs, aes(x = Q, y = n)) +
geom_bar(stat = "identity", fill = "blue", color = "black") +
labs(title = "Q en Rangos de 100",
x = "Valor de Q",
y = "Frecuencia")+
geom_text(aes(label = n), vjust = -0.5)
ggplot(Qs, aes(x = Q, y = n)) +
geom_bar(stat = "identity", fill = "blue", color = "black") +
labs(title = "Q en Rangos de 100",
x = "Valor de Q",
y = "Frecuencia")+
geom_text(aes(label = n), vjust = -0.4)
ggplot(Qs, aes(x = Q, y = n)) +
geom_bar(stat = "identity", fill = "lightblue", color = "black") +
labs(title = "Q en Rangos de 100",
x = "Valor de Q",
y = "Frecuencia")+
geom_text(aes(label = n), vjust = -0.4)
str(coffee2)
# Agrupar por mes y sumar los valores de Q
monthly_gains <- coffee2 %>%
group_by(MONTH) %>%
summarise(total_gains = sum(Q))
monthly_gains
monthly_gains <- monthly_gains %>%
arrange(desc(total_gains))
monthly_gains
# Agrupar por mes y sumar los valores de Q
monthly_gains_by_month <- coffee2 %>%
group_by(MONTH) %>%
summarise(total_gains = sum(Q))
monthly_gains_by_month
monthly_gains_by_ammount <- monthly_gains_by_month %>%
arrange(desc(total_gains))
monthly_gains_by_ammount
# Crear un grÃ¡fico de barras para visualizar las ganancias mensuales
ggplot(monthly_gains_by_ammount, aes(x = MONTH, y = total_gains)) +
geom_bar(stat = "identity", fill = "blue", color = "black") +
labs(title = "Ganancias Mensuales",
x = "Mes",
y = "Ganancias")
ggplot(monthly_gains, aes(x = MONTH, y = total_gains)) +
geom_line(color = "blue") +
geom_point(color = "blue") +
labs(title = "Tendencia de Ganancias Mensuales",
x = "Mes",
y = "Ganancias")
ggplot(monthly_gains_by_ammount, aes(x = MONTH, y = total_gains)) +
geom_line(color = "blue") +
geom_point(color = "blue") +
labs(title = "Tendencia de Ganancias Mensuales",
x = "Mes",
y = "Ganancias")
# Agrupar por mes y sumar los valores de Q
monthly_gains <- coffee2 %>%
group_by(MONTH) %>%
summarise(total_gains = sum(Q))
View(monthly_gains_by_ammount)
# Agrupar por mes y sumar los valores de Q
monthly_gains <- coffee2 %>%
group_by(MONTH) %>%
summarise(total_gains = sum(Q))
monthly_gains
monthly_gains_by_ammount <- monthly_gains %>%
arrange(desc(total_gains))
monthly_gains_by_ammount
ggplot(monthly_gains, aes(x = MONTH, y = total_gains)) +
geom_line(color = "blue") +
geom_point(color = "blue") +
labs(title = "Tendencia de Ganancias Mensuales",
x = "Mes",
y = "Ganancias")
View(monthly_gains_by_ammount)
